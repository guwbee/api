image: node:latest

services:
  - mongo:latest

cache:
  paths:
    - node_modules/

stages:
  - test
  - deploy

test:
  script:
    - yarn install
    - yarn unit

deploy:
  stage: deploy

  before_script:
    # Check for ssh-agent + rsync and install if not present
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y  )'
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
    - eval $(ssh-agent -s)
    # Inject the remote's private key
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Append keyscan output into known hosts
    - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - rsync -avuz --exclude=".*" $CI_PROJECT_DIR $SERVER_USER@$SERVER_IP:~
    # Non interactive ssh gracefully reloads server
    - ssh $SERVER_USER@$SERVER_IP 'cd ~/api;docker-compose up --remove-orphans --build -d '
    - ssh $SERVER_USER@$SERVER_IP 'cd ~/api;docker update --restart unless-stopped redis loadbalancer api'
    # - ssh $SERVER_USER@$SERVER_IP '. /etc/profile; pm2 reload all'
  only:
    # Trigger deployments only from master branch
    - master